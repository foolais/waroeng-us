generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id       String    @id @default(cuid())
  name     String
  address  String?   @default("")
  phone    String?   @default("")
  gender   Gender?   @default(MALE)
  email    String    @unique
  image    String?   @default("")
  role     Role      @default(CASHIER)
  password String
  accounts Account[]
  sessions Session[]

  storeId      String?
  store        Store?  @relation("Store-Users", fields: [storeId], references: [id], onDelete: Cascade)
  storeCreated Store[] @relation("Store-Created")
  storeUpdated Store[] @relation("Store-Updated")

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([storeId, role])
  @@map("users")
}

model Store {
  id     String       @id @default(cuid())
  name   String       @unique
  status STORE_STATUS @default(ACTIVE)
  users  User[]       @relation("Store-Users")

  createdById String
  createdBy   User    @relation("Store-Created", fields: [createdById], references: [id])
  updatedById String?
  updatedBy   User?   @relation("Store-Updated", fields: [updatedById], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("stores")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  SUPER_ADMIN
  ADMIN
  CASHIER
}

enum STORE_STATUS {
  ACTIVE
  INACTIVE
}
